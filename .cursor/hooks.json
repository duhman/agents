{
  "hooks": {
    "pre-request": {
      "enabled": true,
      "rules": [
        {
          "name": "Load Project Context",
          "condition": "always",
          "action": "inject_context",
          "context": [
            "@documentation/project/prd.md",
            "@documentation/project/policies.md",
            ".cursorrules"
          ]
        },
        {
          "name": "Check for PII",
          "condition": "code_contains",
          "patterns": ["email", "phone", "address", "@", "\\d{3}-\\d{3}-\\d{4}"],
          "action": "warn",
          "message": "‚ö†Ô∏è Detected potential PII. Ensure maskPII() is used before any LLM calls or storage."
        },
        {
          "name": "OpenAI Pattern Check",
          "condition": "file_type",
          "types": ["typescript", "javascript"],
          "action": "validate",
          "rules": [
            {
              "pattern": "openai.*completions.*create(?!.*parse)",
              "suggestion": "Use client.beta.chat.completions.parse() with zodResponseFormat() for structured outputs"
            },
            {
              "pattern": "\\.optional\\(\\)(?!.*\\.nullable\\(\\))",
              "suggestion": "Add .nullable() after .optional() for OpenAI structured outputs"
            }
          ]
        }
      ]
    },
    "post-response": {
      "enabled": true,
      "rules": [
        {
          "name": "Check Schema Changes",
          "condition": "file_modified",
          "files": ["packages/db/src/schema.ts"],
          "action": "remind",
          "message": "üìã Remember to run `pnpm db:push` to sync schema changes to database"
        },
        {
          "name": "Check Prompt Changes",
          "condition": "file_modified",
          "files": ["packages/prompts/src/templates.ts"],
          "action": "remind",
          "message": "üß™ Remember to run `pnpm eval` to test extraction accuracy after prompt changes"
        },
        {
          "name": "Format Code",
          "condition": "code_generated",
          "action": "auto_format",
          "formatter": "prettier"
        },
        {
          "name": "Agents SDK Validation",
          "condition": "code_contains",
          "patterns": ["@openai/agents"],
          "action": "validate",
          "rules": [
            { "pattern": "new\\s+Agent\\(\\{[\\s\\S]*outputType", "suggestion": "Provide a Zod schema in Agent.outputType for typed outputs" },
            { "pattern": "temperature\\s*:\\s*[^0]", "suggestion": "Use temperature: 0 for policy-critical extractions" },
            { "pattern": "timeout\\s*:\\s*(?:[1-9]\\d{0,3}|1\\d{4}|2[0-8]\\d{3}|29000)", "suggestion": "Set timeout: 30000 (30s) for serverless reliability" }
          ]
        }
      ]
    }
  }
}

